<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[移动电商项目学习笔记]]></title>
    <url>%2F2018%2F06%2F27%2FVue%2BKoa2%E7%A7%BB%E5%8A%A8%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Vue.js + Koa2 移动电商项目学习笔记开发环境搭建 建立文件夹 新建 SmileVue 文件夹 使用 vue-cli 生成项目目录 使用 npm -v 检测 npm 版本，尽量使用 5.X 以上版本 全局安装 vue-cli, npm install vue-cli -g 在终端中输入 vue init webpack 来初始化项目， 项目名需要小写 测试环境是否安装成功 使用 npm run dev 进行测试环境的打开 在浏览器中输入 localhost:8080 进行测试 引入 Vant 组件库 安装 Vant npm i vant -S 引入 Vant 的方法一 (不推荐) 安装好 Vant 后，可以使用以前常用的方法进行引入—这是一种全局引入的方法 12345// main.jsimport Vant from &apos;vant&apos;import &apos;vant/lib/vant-css/index.css&apos;Vue.use(vant) 不推荐这种方法的原因是在最后打包发布的时候会增加包的大小， Vue 的 SPA 首屏打开时间本来就有些慢 引入 Vant 推荐方法 Vant 是支持 babel-plugin-import 引入的，可以按需引入组件模块，并且不用管理我们的样式，是现在 Vue 项目组件库的主流引入方法。 安装 babel-plugin-import npm i babel-plugin-import -D 或者 npm install babel-plugin-import –save-dev 在 .babelrc 中配置 plugins 12345&quot;plugins&quot;: [ &quot;transform-vue-jsx&quot;, &quot;transform-runtime&quot;, [&quot;import&quot;,&#123;&quot;libraryName&quot;:&quot;vant&quot;,&quot;style&quot;:true&#125;]] 按需使用 Vant 组件 在设置好 .babelrc 后，就可以按需引入 Vant 框架了。比如引入一个 Button 组件 123456// main.jsimport &#123; Button &#125; from &apos;vant&apos;Vue.use(Button)// 有了这段代码之后，我们就可以在需要的组件页面中假如 Button 了&lt;van-button type=&quot;primary&quot;&gt;主要按钮&lt;/van-button&gt; 移动端屏幕适配基础 常见移动 Web 布局适配方法 固定高度，固定百分比：过时的方法 Media Query (媒体查询)：现在比较主流的适配方案 flex 布局： 主流的布局方式，在项目中尽量采用 flex + rem 的方式进行布局和完成移动端的适配。 rem 单位介绍 适配原理：将 px 替换成 rem，动态修改 html 的 font-size 适配。它可以很好的根据根元素的字体大小来进行变化，从而达到各种屏幕基本一致的效果体验。 JS 控制适配屏幕 12345678910// 得到手机屏幕的宽度let htmlWidth = document.documentElement.clientWidth || document.body.clientWidth;// 得到 html 的 DOM 元素let htmlDom = document.getElementsByTagName(&apos;html&apos;)[0];// 设置根元素字体大小htmlDom.style.fontSize = htmlWidth/20 + &apos;px&apos;;// 当页面很大的时候，我们的移动适配方案会呈现很大的字体，所以加一个判断，解决页面字体过大的问题// 当页面宽度大于 750px 时, 把页面的宽度设置为 750pxif ( htmlWidth&amp;gt; 750 ) &#123; htmlWidth=750 &#125; 首页布局和路由设置首页路由的配置： 打开路由配置页面：src/router/index.js，先删除 vue-cli 自动生成的 HelloWorld.Vue 的配置，然后加入新的路由配置 1234567891011import Vue from &apos;vue&apos;import Router from &apos;vue-router&apos;import ShoppingMall from &apos;@/components/pages/ShoppingMall&apos; // @ 表示 项目 src 的目录Vue.use(Router)export default new Router(&#123; routes: [ &#123;path: &apos;/&apos;,name: &apos;ShoppingMall&apos;,component: ShoppingMall&#125; ]&#125;) 建立首页组件 删除 HelloWorld.vue 文件，建立 ShoppingMall.vue 文件。代码如下： 123456789101112131415&lt;template&gt; &lt;div&gt; &#123;&#123;msg&#125;&#125; &lt;/div&gt;&lt;/template&gt; &lt;script&gt;export default &#123; data () &#123; return &#123; msg: &apos;Shopping Mall&apos; &#125; &#125;&#125;&lt;/script&gt; Vant 布局 使用 Vant 的布局需要先进行按需引入，直接在 main.js 里引入 Row 和 Col 组件 import { Button, Row, Col } from ‘vant’ Vue.use(Button).use(Row).use(Col) Vant 采用 24 格布局法，我们控制这 24 等分的比例就可以实现布局 12345&lt;van-row&gt; &lt;van-col span=&quot;8&quot;&gt;span: 8&lt;/van-col&gt; &lt;van-col span=&quot;8&quot;&gt;span: 8&lt;/van-col&gt; &lt;van-col span=&quot;8&quot;&gt;span: 8&lt;/van-col&gt;&lt;/van-row&gt; 首页搜索区域的布局搜索条的布局 利用 van-row 和 van-col 快速布局一个搜索条的 HTML 骨架 12345678910111213&lt;div class=&quot;search-bar&quot;&gt; &lt;van-row&gt; &lt;van-col span=&quot;3&quot;&gt;icon&lt;/van-col&gt; &lt;van-col span=&quot;16&quot;&gt;serach input&lt;/van-col&gt; &lt;van-col span=&quot;5&quot;&gt;button&lt;/van-col&gt; &lt;/van-row&gt;&lt;/div&gt;.search-bar&#123; height: 2.2rem; background-color: #e5017d; line-height:2.2rem; &#125; 下载 icon 图标 在 src/assets/ 目录下新建 images 文件夹，以后所有的项目图片都放在这里 引入图片 把图片用 require 引进到页面中 12345678910// 通过绑定属性的方法插入图片&lt;van-col span=&quot;3&quot;&gt;&lt;img :src=&quot;locationIcon&quot; width=&quot;100%&quot; /&gt;&lt;/van-col&gt;export default &#123; data() &#123; return &#123; locationIcon: require(&apos;../../assets/images/location.png&apos;) &#125; &#125;,&#125; 写 input 和 button 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;template&gt; &lt;div&gt;&lt;!--search bar layout--&gt;&lt;div class=&quot;search-bar&quot;&gt; &lt;van-row gutter=&quot;5&quot;&gt; &lt;van-col span=&quot;3&quot;&gt;&lt;img :src=&quot;locationIcon&quot; width=&quot;80%&quot; class=&quot;location-icon&quot; /&gt;&lt;/van-col&gt; &lt;van-col span=&quot;16&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;search-input&quot;/&gt; &lt;/van-col&gt; &lt;van-col span=&quot;5&quot;&gt;&lt;van-button size=&quot;mini&quot;&gt;查找&lt;/van-button&gt;&lt;/van-col&gt; &lt;/van-row&gt;&lt;/div&gt; &lt;/div&gt;&lt;/template&gt; &lt;script&gt; export default &#123; data() &#123; return &#123; locationIcon: require(&apos;../../assets/images/location.png&apos;) &#125; &#125;,&#125;&lt;/script&gt; &lt;style scoped&gt; .search-bar&#123; height: 2.2rem; background-color: #e5017d; line-height:2.2rem; &#125; .search-input&#123; width:100%; height: 1.3rem; border-top:0px; border-left:0px; border-right:0px; border-bottom: 1px solid 1px !important ; background-color: #e5017d; color:#fff; &#125; .location-icon&#123; padding-top: .2rem; padding-left: .3rem; &#125;&lt;/style&gt; 首页轮播图的制作按需加载 Swipe 组件 在 /src/main.js 下按需引入 swipe import { Swipe, SwipeItem } from ‘vant’; Vue.use(Swipe).use(SwipeItem); 现在的 main.js 样式如下： import { Button, Row, Col ,Search , Swipe , SwipeItem } from ‘vant’ Vue.use(Button).use(Row).use(Col).use(Search).use(Swipe).use(SwipeItem) 下载图片 图片链接: 开始制作轮播图 在 js 部分写入一个 data 参数 bannerPicArray，把图片地址放入到里边 123456789101112131415161718192021222324252627282930// /src/components/pages/ShoppingMall.vuedata() &#123; return &#123; locationIcon: require(&apos;../../assets/images/location.png&apos;), bannerPicArray:[ &#123;imageUrl:&apos;http://7xjyw1.com1.z0.glb.clouddn.com/simleVueDemoPic001.jpg&apos;&#125;, &#123;imageUrl:&apos;http://7xjyw1.com1.z0.glb.clouddn.com/simleVueDemoPic002.jpg&apos;&#125;, &#123;imageUrl:&apos;http://7xjyw1.com1.z0.glb.clouddn.com/simleVueDemoPic003.jpg&apos;&#125;, ] &#125; &#125;, // 模板如下 &lt;!--swipwer area--&gt;&lt;div class=&quot;swiper-area&quot;&gt; &lt;van-swipe :autoplay=&quot;1000&quot;&gt; &lt;van-swipe-item v-for=&quot;(banner,index) in bannerPicArray&quot; :key=&quot;index&quot;&gt; &lt;img :src=&quot;banner.imageUrl&quot; width=&quot;100%&quot;/&gt; &lt;/van-swipe-item&gt; &lt;/van-swipe&gt;&lt;/div&gt;// CSS 代码.swiper-area&#123; overflow: hidden; clear: both; width:20rem; clear:both;&#125; 利用 Vant 实现图片轮播的懒加载 import { Button, Row, Col ,Search , Swipe , SwipeItem , Lazyload } from ‘vant’ Vue.use(Button).use(Row).use(Col).use(Search).use(Swipe).use(SwipeItem).use(Lazyload) // 修改 template 区域，加入v-lazy=&quot;banner.imageUrl&quot;就可以图片的懒加了 easyMock 和 Axios 的使用Mock 数据准备 进入 easy-Mock axios 的引入 直接使用 npm install 进行安装 npm install –save axios 安装之后在要使用的页面组件中进行引入 import axios from ‘axios’ 然后在 created 的声明周期里取得数据 1234567891011created()&#123; axios(&#123; url: &apos;https://www.easy-mock.com/mock/5ae2427800247c2aa1efe442/SmileVue/&apos;, method: &apos;get&apos;, &#125;) .then(response =&gt; &#123; console.log(response) &#125;) .catch((error) =&gt; &#123; &#125;)&#125; 如果能取得数据后，说明已经 Mock 成功了，那接下来就用这些数据进行布局]]></content>
      <tags>
        <tag>javascript Vue 前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站统计]]></title>
    <url>%2F2018%2F06%2F24%2F%E7%BD%91%E7%AB%99%E7%BB%9F%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[网站统计流量统计原理 流量统计原理主要有两种：传统的基于日志文件统计和当前较为流行的基于脚本（JavaScript 等）统计 基于日志文件的统计通过分析网站后台的日志文件来统计访客的浏览和点击行为。这种方法的优点是简单方便，无需修改网页代码，可以 收集网络爬虫数据等。缺点是网站日志包含所有日志数据，需预处理来提升数据质量；而且无法统计到页面缓存导致的缓 存浏览数据。 基于脚本的统计此方法需要在网站的 html 代码中嵌入一段脚本（JavaScript 等）用于统计访客的浏览等行为。这种方法的优点是技 术难度低，只需嵌入脚本代码，无需配置服务器；能够快速获取点击、响应等数据并方便展现；不需要担心缓存带来的影 响，数据的准确度较高。缺点主要是无法统计网络爬虫的信息。当前主流的流量分析系统绝大部分采用此种方法收集数据， 包括百度统计和谷歌分析等。以下为网站分析工具的 JavaScript 收集数据流程图： 网站分析指标网站分析中都用到哪些衡量指标？又如何分析这些指标呢？举个例子来说明，如果把一个网站比作一家超市，运营网 站就像打理超市的生意，那么目标就是让访客多停留、多购买、多办几张会员卡。为了达成这个目标，我们先要了解当前 的情况，比如有多少人走进了超市、看了多少件产品、多少人办理了会员卡；类似地，在网站分析中我们也要了解这些数 据，并作为后续业务调整的依据：比如，多少人进入了网站、浏览了多少页面、多少人办理会员等，网站分析指标是数据 化地呈现网站运营的状况，帮助站长从各维度了解访客，优化网站。 常见指标为：浏览量（PV）、访问次数、访客数（UV）、新访客数、新访客比率、IP、跳出率、平均访问时长、平 均访问页数、转化次数、转化率。可以概况为 3 类，流量数量指标，流量质量指标，流量转化指标。 流量数量指标 浏览量 （PV） 定义：页面浏览量即为 PV(Page View)，用户每打开一个页面就被记录 1 次。 技术说明：一个 PV 即电脑从网站下载一个页面的一次请求。当页面上的 JS 文件加载后，统计系统才会统计到这个 页面的浏览行为，有如下情况需注意：1. 用户多次打开同一页面，浏览量值累计。2. 如果客户端已经有该缓冲的文档， 甚至无论是不是真的有这个页面（比如 JavaScript 生成的一些脚本功能），都可能记录为一个 PV。但是如果利用网站 后台日志进行分析，因为缓存页面可能直接显示而不经过服务器请求，那么不会记录为一个 PV。 涵义：PV 越多越说明该页面被浏览的越多。PV 之于网站，就像收视率之于电视，已成为评估网站表现的基本尺度。 访问次数 定义：访问次数即 Visit，访客在网站上的会话 (Session) 次数，一次会话过程中可能浏览多个页面。 技术说明：如果访客连续 30 分钟内没有重新打开和刷新网站的网页，或者访客关闭了浏览器，则当访客下次访问您 的网站时，访问次数加 1。反之，访客离开后半小时内再返回，则算同一个访次，以上对访客的判断均以 Cookie 为准。 涵义：页面浏览量（PV）是以页面角度衡量加载次数的统计指标，而访问次数（Visit）则是访客角度衡量访问的分析指标。 如果网站的用户黏性足够好，同一用户一天中多次登录网站，那么访问次数就会明显大于访客数。 访客数 （UV） 定义：访客数（UV）即唯一访客数，一天之内网站的独立访客数 ( 以 Cookie 为依据 )，一天内同一访客多次访问网 站只计算 1 个访客。 技术说明：当客户端第一次访问某个网站服务器的时候，网站服务器会给这个客户端的电脑发一个 Cookie，记录访 问服务器的信息。当下一次再访问服务器的时候，服务器就可以直接找到上一次它放进去的这个 Cookie，如果一段时间内， 服务器发现两个访次对应的 Cookie 编号一样，那么这些访次一定就是来自一个 UV 了。 涵义：唯一访客数（UV）是访客维度看访客到达网站的数量。 新访客数 定义：一天的独立访客中，历史第一次访问网站的访客数。 涵义：新访客数可以衡量营销活动开发新用户的效果。 新访客比率 定义：新访客比率 = 新访客数 / 访客数。即一天中新访客数占总访客数的比例。 涵义：整体访客数不断增加，并且其中的新访客比例较高，能表现网站运营在不断进步。就像人体的血液循环一样， 有新鲜的血液不断补充进来，充满活力。 IP 数 定义：一天之内，访问网站的不同独立 IP 个数加和。其中同一 IP 无论访问了几个页面，独立 IP 数均为 1。 涵义：从 IP 数的角度衡量网站的流量。 流量质量指标 跳出率 定义：只浏览了一个页面便离开了网站的访问次数占总的访问次数的百分比，即只浏览了一个页面的访问次数 / 全部 的访问次数汇总。 涵义：跳出率是非常重要的访客黏性指标，它显示了访客对网站的兴趣程度：跳出率越低说明流量质量越好，访客对 网站的内容越感兴趣，这些访客越可能是网站的有效用户、忠实用户。该指标也可以衡量网络营销的效果，指出有多少访 客被网络营销吸引到宣传产品页或网站上之后，又流失掉了，可以说就是煮熟的鸭子飞了。比如，网站在某媒体上打广告 推广，分析从这个推广来源进入的访客指标，其跳出率可以反映出选择这个媒体是否合适，广告语的撰写是否优秀，以及 网站入口页的设计是否用户体验良好。 平均访问时长 定义：平均每次访问在网站上的停留时长，即平均访问时长等于总访问时长与访问次数的比值。 涵义：平均访问时间越长则说明访客停留在网页上的时间越长：如果用户对网站的内容不感兴趣，则会较快关闭网页， 那么平均访问时长就短；如果用户对网站的内容很感兴趣，在网站停留了很长时间，平均访问时长就长。 平均访问页数 定义：平均每次访问浏览的页面数量，平均访问页数 = 浏览量 / 访问次数。 涵义：平均访问页数多说明访客对网站兴趣越大。而浏览信息多也使得访客对网站更加了解，这对网站市场信息的传 递，品牌印象的生成，以至于将来的销售促进都是有好处的。一般来说，会将平均访问页数和平均访问时长这两个指标放 在一起分析，进而衡量网站的用户体验情况。 流量转化指标 转化次数 定义：访客到达转化目标页面，或完成网站运营者期望其完成动作的次数。 涵义：转化就是访客做了任意一项网站管理者希望访客做的事。与网站运营者期望达到的推广目的和效果有关。 转化率 定义：转化率 = 转化次数 / 访问次数。 涵义：转化率即访问转化的效率，数值越高说明越多的访次完成了网站运营者希望访客进行的操作。 网站分析流程 网站分析流程其实就是一个发现问题、分析问题和解决问题的过程。利用规范的分析流程会避免逻辑混乱，更加清晰 和有效地优化网站。以下是总结出来的网站分析流程供大家参考： 明确目标 制定计划 选择系统 部署网站 部署简单 数据全面 功能完备 运行稳定 测量指标 分析现象 改进业务 跟踪问题]]></content>
      <tags>
        <tag>网站统计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2018%2F05%2F21%2Ftest%2F</url>
    <content type="text"><![CDATA[20182018年4月1日 晴​ 又是犹豫的一天，这之前我已经犹豫了两三个月了，犹豫就像一潭死滞的淤泥，我感觉自己的生命在其中正以几十倍于从前的速度消耗着。这里说的从前是我没有产生那个想法的时候，是基延还没有商业化的时候。 ​ 从写字楼顶层的窗子望出去，城市在下面扩展开来，像一片被剖开的集成电路，我不过是那密密麻麻的纳米线路中奔跑的一个小电子，真的算不了什么，所以我做出的决定也算不了什么，所以决定就可以做出了。像以前多少次一样，决定还是做不出，犹豫还在继续。 ​ 强子又迟到了，带着一股风闯进办公室，他脸上有淤青，脑门上还贴着一块创可贴。但他显得很自豪，昂着头，像贴着一枚勋章。他的办公桌就在我对面，他坐下后没开电脑，直勾勾的看着我，显然等我发问，但我没那个兴趣。 “昨晚电视里看到了吧？”强子兴奋地说。 ​ 他显然是指“生命水面”袭击市中心医院的事，那也是国内最大的基延中心。医院雪白的楼面上出现了两道长长的火烧的黑迹，像如玉的美人脸被脏手摸了一下，很惊心。“生命水面”是众多反基延组织中规模最大的一个，也是最极端的一个，强子就是其中的一员，但我没在电视中看到他，当时，医院外面的人群像愤怒的潮水。 ​ “刚开过会，你知道公司的警告，再这样你的饭碗就没了。”我说。 ​ 基延是基因改造延长生命技术的简称，通过去除人类基因中产生衰老时钟的片段，可将人类的正常寿命延长至三百岁。这项技术在五百年前开始商业应用，现在却演化为一场波及全世界的社会和政治灾难，原因是它太贵了。在这里，一个人的基延价格相当于一座豪华别墅，只有少数人能消费的起。 ​ “我不在乎，”强子说，“对于一个连一百岁都活不到的人来说，我在乎什么？”他说着点上一支烟，办公室里禁止吸烟，他看来是想表示自己真的不在乎。 ​ “嫉妒，嫉妒是一种有害健康的情绪。”我挥手驱散眼前的烟雾说，“以前也有很多人因为交不起医疗费而降低寿命的。” ​ “那不一样，看不起病的人是少数，而现在，百分之九十九的人眼巴巴地看着那百分之一的有钱人活三百岁！我不怕承认嫉妒，是嫉妒在维护着社会公平。”他从办公桌上探身凑近我，“你敢拍胸脯说自己不嫉妒？加入我们吧。” ​ 强子的目光让我打了个寒战，一时间真怀疑他看透了我。是的，我就要成为一个他嫉妒的对象，我就要成为一个基延人了。 ​ 其实我没有多少钱，三十多岁一事无成，还处于职场的最底层。但我是财务人员，有机会挪用资金。经过长期的策划，一切都已完成，现在我只要点一下鼠标，基延所需的那五百万新人民币就能进入我的秘密账户，然后再转到基延中心的账户上。这方面我是个很专业的人，在迷宫般的财务系统中我设置了层层掩护，至少要半年时间，这笔资金的缺口才有可能被发现，那时，我将丢掉工作，将被判刑、被没收全部财产，将承受无数鄙夷的目光…… ​ 但那时的我已经是一个能活三百岁的人了。 可我还在犹豫。 ​ 我仔细研究过法律，按贪污罪量刑，五百万元最多判二十年。二十年后，我前面还有两百多年的诱人岁月。现在的问题是，这么简单的算术题，难道只有我会做吗？事实上只要能进入基延一族，现有法律中除死刑之外的所有罪行都值得一犯。那么，有多少人和我一样处于策划和犹豫中？这想法催我尽快行动，同时也使我畏缩。 ​ 但最让我犹豫的还是简简，这已经是属于理性之外了。在遇到简简之前，我不相信世界上有爱情这回事；在遇到她之后，我不相信世界上除了爱情还有什么，离开她，我活两千年又有什么意思？现在在人生的天平上，一边是两个半世纪的寿命，另一边是离开简简的痛苦，天平几乎是平的。 ​ 部门主管召集开会。从他脸上的表情我就能猜出来，这个会不是安排工作，而是针对个人。果然，主管说他今天想谈谈某些员工的“不能被容忍的”社会行为。我没有转头看强子，但知道他要倒霉了，可主管说出的却是另一个人的名字。 ​ “刘伟，据可靠消息，你加入了IT共和国？” ​ 刘伟点点头，像走上断头台的路易十六般高傲：“这与工作无关，我不希望公司干涉个人自由。” ​ 主管严肃地摇摇头，冲他竖起一根手指：“很少有事情与工作无关的，不要把你们在大学中热衷的那一套带到职场上来，如果一个国家可以在大街上骂总统那叫民主，但要是都不服从老板，那这个公司肯定会崩溃的。” ​ “虚拟国家就要被承认了。” ​ “被谁承认？联合国？还是某个大国？别做梦了。” ​ 其实主管最后的这句话中并没有多少自信。现在，人类社会拥有的领土上分为两部分，一部分是地球各大陆和岛屿，另一部分则是互联网广阔的电子空间。后者以快百倍的速度重复着文明史，在那里，经历了几十年无序的石器时代之后，国家顺理成章地出现了，虚拟国家主要有两个起源，一是各种 聚集了大量ID的BBS，二是那些玩家已经上亿的大型游戏。虚拟国家有着与实体国家相似的元首和议会，甚至拥有只在网上出现的军队。与实体国家以地域和民族划分不同，虚拟国家主要以信仰、爱好和职业为基础组建，每个虚拟国家的成员都遍布全世界，多个虚拟国家构成了虚拟国际，现已拥有二十亿人口，并建立了与实体国际对等的虚拟联合国，成为叠加在传统国家之上的巨大的政治实体。 IT共和国就是虚拟国际中的一个超级大国，人口八千万，还在迅速成长中。这是一个主要由IT工程师组成的国家，有着咄咄逼人的政治诉求，也有着对实体国际产生作用的强大力量。我不知道刘伟在其中的公民身份是什么。据说IT共和国的元首是某个IT公司的普通小职员，相反，也有不止一个实体国家的元首被曝光是某个虚拟国家的普通公民。 主管对大家进行严重警告，不得拥有第二国籍，并阴沉地让刘伟到总经理办公室去一趟，然后宣布散会。我们还没有从座位上起身，一直待在电脑屏幕前的郑丽丽让人头皮发炸地大叫起来，说出大事儿了，让大家看新闻。 ​ 我回到办公桌前，把电脑切换到新闻频道，看到紧急插播的重要新闻。播音员一脸阴霾地宣布，在联合国否决IT共和国要求获得承认的3617号决议被安理会通过后，IT共和国向实体国际宣战，半小时前已经开始了对世界金融系统的攻击。 ​ 我看看刘伟，他对这事好像也很意外。 ​ 画面切换到某个大都市，鸟瞰着高楼间的街道，长长的车流拥堵着，人们从车中和两旁的建筑物中纷纷拥出，像是发生了大地震一般。镜头又切换到一家大型超市，人群像黑色的潮水般涌入，疯狂地争抢货物，一排排货架摇摇欲坠，像被潮水冲散的沙堤。 ​ “这是干什么？”我惊恐在问。 ​ “还不明白吗？！”郑丽丽继续尖叫道，“要均贫富了！所有的人都要一文不名了！快抢吃的呀！！” ​ 我当然明白，但不敢相信噩梦已成现实。传统的纸币和硬币已在三年前停止流通，现在即使在街边小货亭买盒烟也要刷卡。在这个全信息化时代，财富是什么？说到底不过是计算机存储器中的一串串脉冲和磁印。以这座华丽宏伟的写字楼来说，如果相关部门中所有的电子记录都被删除，公司的总裁 即使拿着房产证，也没有谁承认它的所有权。钱是什么？钱不再是王八蛋了，钱只是一串比细菌还小的电磁印记和转瞬即逝的脉冲，对于IT共和国来说，实体世界上近一半的IT从业者都是其公民，抹掉这些印记是很容易的。 ​ 程序员、网络工程师、数据库管理员这类人构成了IT共和国的主体，这个阶层是19世纪的产业大军在21世纪的再现，只不过劳作的部分由肢体变成大脑，繁重程度却有增无减。在浩如烟海的程序代码和迷宫般的网络软硬件中，他们如两百多年前的码头搬运工般背起重负，如妓女般彻夜赶工。信息技术的发展一日千里，除了部分爬到管理层的幸运儿，其他人的知识和技能很快过时，新的IT专业毕业生如饥饿的白蚁般成群涌来，老的人（其实不老，大多三十出头）被挤到一边，被代替和抛弃，但新来者没有丝毫得意，这也是他们中大多数人不算遥远的前景……这个阶层被称作技术无产阶级。 ​ 不要说我们一无所有，我们要把世界格式化！这是被篡改的国际歌歌词。 ​ 我突然像遭雷劈一样，天啊，我的钱，那些现在还不属于我的钱，但即将为我买来两个多世纪生命和生活的钱，要被删除了吗？！但如果一切都格式化了，结果不是都一样吗？我的钱、我的基延，我的梦想……我眼前发黑，无头苍蝇般在办公室中来回走着。 ​ 一阵狂笑使我停下脚步，笑声是郑丽丽里发出的，她在哪里笑得蹲下了。 ​ “愚人节快乐。”冷静的刘伟扫了一眼办公室一脚的网络交换机说。我顺着他的目光看去，发现交互机与公司网络断开了，郑丽丽的笔记本电脑接在上面，充当了服务器。这个婊子！为了这个愚人节笑话，她肯定废了不少劲，主要是做哪些新闻画面，但在这个一个人猫在屋里就能用3D软件做出一部大片的时代，这也算不了什么。 ​ 别人显然并不觉得郑丽丽的玩笑过分了，强子又用那种眼光看着我说：“咋啦，你应该对他们发毛才对啊，你怕什么？”他指指高管们所在的上层。 ​ 我又出了一身冷汗，怀疑他是不是真的看透我了，但我最大的恐惧不在于此。 ​ 世界格式化，真的只是IT共和国中极端分子的疯话？真的只是一个愚人节玩笑？吊着这把悬剑的那根头发还能支持多久？ ​ 一瞬间，我的犹豫像突然打开的强光灯下的黑暗那样消失了，我决定了。 ​ 晚上我约了简简，当我从城市灯海的背景上辩认出她的身影时，坚硬的心又软了下来，她那小小的剪影看上去那么娇弱，像一条随时都会被一阵微风吹灭的烛苗，我怎么能伤害她？！当她走近，我看到她的眼睛时，心中的天平已经完全倾向另一个方向，没有她，我要那两百多年有什么用？时间真的会抚平创伤？那可能不过是两个多世纪漫长的刑罚而已。爱情使我这个极端自私的人又崇高起来。 ​ 但简简先说话了，说出的居然是我原来准备向她说的话，一字不差：“我犹豫了好长时间，我们还是分手吧。” ​ 我茫然地问她为什么。 ​ “很长时间后，当我还年轻时，你已经老了。” ​ 我好半天才理解了她的意思，随即也读懂了她那刚才还令我心碎的哀怨目光，我本以为是她已经看透了我或猜到了些什么。我轻轻笑了起来，很快变成仰天大笑。我真是傻，傻得不透气，也不看看这是个什么时代，也不看看我们前面浮现出怎样的诱惑。笑过之后，我如释重负，浑身轻松地像要飘起来，不过在这同时，我还是真诚的为简简高兴。 ​ “你哪来那么多钱？”我问她。 “只够我一个人的。”她低声说，眼睛不敢看我。 ​ “我知道，没关系，我是说你一个人也要不少钱的。” ​ “父亲给了我一些，一百年时间是够的。我还存了一些钱，到那时利息应该不少了。” ​ 我知道自己又猜错了，她不是要做基延，而是要冬眠。这是另一项已经商业化的生命科学成果，在零下五十摄氏度左右的低温状态，通过药物和体外循环系统使人体的新陈代谢速度降至正常状态的百分之一，人在冬眠中度过一百年时间，生理年龄仅长了一岁。 “生活太累了，也无趣，我只是想逃避。”简简说。 “到一个世纪后就能逃避吗？那时你的学历已经不被承认，也不适应当时的社会，能过得好吗？” ​ “时代总是越来越好的，实在不行我到时候再接着冬眠，还可以做基延，到那时一定很便宜了。” ​ 我和简简默默地分别了。也许，一个世纪后我们还能在相会，但我没向她承诺什么，那时候的她还是她，但我已经是一个经历了一百三十多年沧桑的人了。 ​ 简简的背影消失后，我没再犹豫一刻，拿出手机登录到网银系统，立刻把那五百万元新人民币转到基延中心的账户上。虽然已近午夜，我还是很快收到了中心主任的电话，他说明天就可以开始我的基因改良操作，顺利的话一周就能完成。他还郑重地重复了中心的保密承诺（身份暴露的基延族中，已经有三人被杀）。 ​ “你会为自己的决定庆幸的，”主任说，“因为你将得到的不只是两个多世纪的寿命，可能是永生。” ​ 我明白这点，谁也不知道两个世纪后会出现什么样的技术，也许，到时可以把人的意识和记忆拷贝出来,做成永远不丢失的备份，随时可以灌注到一个新的身体中；也许根本不需要身体，我们的意识在网络中像神一般游荡，通过数量无限的传感器感受着世界和宇宙，这真的是永生了。 ​ 主任接着说：“其实，有了时间就有了一切，只要时间足够，一直乱敲打字机的猴子都能打出《莎士比亚全集》，而你有的是时间。” ​ “我？不是我们吗？” ​ “我没有做基延。” ​ “为什么？” ​ 对方沉默良久后说：“这世界变化太快了，太多的机会、太多的诱惑、太多的欲望、太多的危险，我觉得头晕目眩的，毕竟岁数大了。不过你放心，”他接着说出了简简那句话，“时代总是越来越好的。” ​ 现在，我坐在自己狭小的单身公寓中写这这篇日记，这是我有生以来第一篇日记，以后要坚持记下去，因为我总要留下些东西。时间也会让人失去一切，我知道，长寿的并不是我，两个世纪后的我肯定是另一个陌生人了，其实仔细想想，自我的概念搬来就很可疑，构成自我的身体、记忆和意识都是在不断的变化中，与简简分别之前的我，以犯罪的方式付款之前的我，与主任交谈之前的我，甚至在打出这个“甚至”之前的我，都已经不是同一个人了，想到这里我很释然。 ​ 但我总是要留下些东西。 ​ 窗外的夜空中，黎明前的星星在发出它们最后的寒光，与城市辉煌的灯海相比，星星如此暗淡，刚能被辨认出来，但他们是永恒的象征。就在这一夜，不知有多少与我一样的新新人类上路了，不管好坏，我们将是第一批真正触摸永恒的人。]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
